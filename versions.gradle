/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.compileSdkVersion = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def deps = [:]

def kotlin = [:]
def kotlin_version = '1.3.41'
def corutine = '1.3.0-RC2'

kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
kotlin.classpath = "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
kotlin.coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$corutine"
kotlin.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$corutine"

deps.kotlin = kotlin

def support = [:]
def support_version = '1.0.0'
def support_version_material = '1.0.0-rc01'

support.annotations = "androidx.annotation:annotation:$support_version"
support.core = "androidx.core:core-ktx:1.1.0"
support.app_compat = "androidx.appcompat:appcompat:1.0.0"
support.cardview = "androidx.cardview:cardview:$support_version"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$support_version"
support.customtabs = "androidx.browser:browser:$support_version"
support.constraintlayout = "androidx.constraintlayout:constraintlayout:1.1.3"
deps.support = support


def firebase = [:]
firebase.analitics = 'com.google.firebase:firebase-analytics:17.2.0'
deps.firebase = firebase


def jetpack = [:]
def arch_version = "2.1.0-rc01"
def navigation = "2.1.0-alpha06"

jetpack.roomRuntime = "androidx.room:room-runtime:$arch_version"
jetpack.roomRx = "androidx.room:room-rxjava2:$arch_version"
jetpack.roomTesting = "androidx.room:room-testing:$arch_version"

jetpack.lifecycle = "androidx.lifecycle:lifecycle-extensions:$arch_version"
jetpack.safeState = "androidx.lifecycle:lifecycle-viewmodel-savedstate:1.0.0-alpha03"
jetpack.viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$arch_version"
jetpack.livedata = "androidx.lifecycle:lifecycle-livedata:$arch_version"
jetpack.lifecycleruntime = "androidx.lifecycle:lifecycle-runtime:$arch_version"
jetpack.reactivestream = "androidx.lifecycle:lifecycle-reactivestreams:$arch_version"

jetpack.navigationFragment = "androidx.navigation:navigation-fragment-ktx:$navigation"
jetpack.navigationUi = "androidx.navigation:navigation-ui-ktx:$navigation"

jetpack.paging = "androidx.paging:paging-runtime:$arch_version"
jetpack.pagingCommon = "androidx.paging:paging-common:$arch_version"
jetpack.pagingRx = "androidx.paging:paging-rxjava2:$arch_version"

jetpack.lifecycleCompiler = "androidx.lifecycle:lifecycle-compiler:$arch_version"
jetpack.roomCompiler = "androidx.room:room-compiler:$arch_version"


deps.jetpack = jetpack

def google = [:]
def material_version = '1.1.0-alpha10'
google.material = "com.google.android.material:material:$material_version"

deps.google = google


def glide = [:]
glide.BigImageViewer = "com.github.piasy:BigImageViewer:1.5.6"
glide.glide = "com.github.bumptech.glide:glide:4.9.0"
glide.compiler = "com.github.bumptech.glide:compiler:4.9.0"
glide.GlideImageLoader = "com.github.piasy:GlideImageLoader:1.5.6"
glide.androidsvg = "com.caverock:androidsvg:1.2.1"
deps.glide = glide


def dagger = [:]
def dagger_version = '2.23.2'
def dagger_assist = '0.5.0'
dagger.android = "com.google.dagger:dagger-android:$dagger_version"
dagger.android_support = "com.google.dagger:dagger-android-support:$dagger_version"

dagger.compiler = "com.google.dagger:dagger-compiler:$dagger_version"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$dagger_version"
dagger.assisted = "com.squareup.inject:assisted-inject-processor-dagger2:$dagger_assist"
dagger.assistedCompileOnly = "com.squareup.inject:assisted-inject-annotations-dagger2:$dagger_assist"

deps.dagger = dagger


def tools = [:]
tools.timber = 'com.jakewharton.timber:timber:4.7.1'

deps.tools = tools


ext.deps = deps
